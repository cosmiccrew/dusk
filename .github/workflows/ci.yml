name: continuous-integration

on:
  pull_request:
  push: # Run CI on the main branch after every merge. This is important to fill the GitHub Actions cache in a way that pull requests can see it
    branches:
      - main

env:
  # When rustup is updated, it tries to replace its binary, which on Windows is somehow locked.
  # This can result in the CI failure, see: https://github.com/rust-lang/rustup/issues/3029
  PREREQS: |
    rustup set auto-self-update disable


jobs:
  clippy:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            deps: |
              sudo apt-get update &&
              sudo apt-get install -y g++ pkg-config libx11-dev libasound2-dev libudev-dev
          - os: macos-latest
            deps: |
              brew install llvm
          - os: windows-latest
            deps: |
              curl -L https://github.com/rust-embedded/cargo-binutils/releases/download/v0.3.6/x86_64-pc-windows-msvc.zip -o temp.zip
              7z e temp.zip -aos -oC:\Users\runneradmin\.cargo\bin
              del temp.zip

    runs-on: ${{ matrix.os }}
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v3
      - run: ${{ env.PREREQS }}
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: ${{ matrix.os }}
          prefix-key: v0 #increment this to bust the cache if needed
      - name: install platform specific dependencies
        run: ${{ matrix.deps }}

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-targets --features=dynamic_linking

  #checks rust fmt - helps ensure all commits are in sync
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run:  ${{ env.PREREQS }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            deps: |
              sudo apt-get update &&
              sudo apt-get install -y g++ pkg-config libx11-dev libasound2-dev libudev-dev
          - os: macos-latest
            deps: |
              brew install llvm
          - os: windows-latest
            deps: |
              curl -L https://github.com/rust-embedded/cargo-binutils/releases/download/v0.3.6/x86_64-pc-windows-msvc.zip -o temp.zip
              7z e temp.zip -aos -oC:\Users\runneradmin\.cargo\bin
              del temp.zip
    name: test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v3
      # When rustup is updated, it tries to replace its binary, which on Windows is somehow locked.
      # This can result in the CI failure, see: https://github.com/rust-lang/rustup/issues/3029
      - run: ${{ env.PREREQS }}
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: ${{ matrix.os }}
          prefix-key: v0 #increment this to bust the cache if needed
      - name: install platform specific dependencies
        run: ${{ matrix.deps }}

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: test
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --features=dynamic_linking